DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getBDate`(IN `root` CHAR(8))
BEGIN
SELECT GEDCOM_1.GC_VALUE FROM GEDCOM
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_NODE = GEDCOM_1.GC_PARENT
    WHERE GEDCOM.GC_ROOT_OBJECT = root
    AND GEDCOM.GC_TAG = 'BIRT'
    AND GEDCOM_1.GC_TAG = 'DATE';
END$$
DELIMITER ;
SELECT * FROM ChainPro.GEDCOM;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getBio`(IN `root` CHAR(8))
BEGIN
SELECT GEDCOM.GC_TAG AS TAG1, GEDCOM_1.GC_TAG AS TAG2, GEDCOM_1.GC_VALUE AS VALUE
 FROM GEDCOM
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_NODE = GEDCOM_1.GC_PARENT
    WHERE (((GEDCOM.GC_TAG = 'BIRT') OR (GEDCOM.GC_TAG = 'DEAT'))
		AND (GEDCOM.GC_ROOT_OBJECT = root));
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getBranch`(IN `root` CHAR(8))
BEGIN
SELECT GEDCOM_1.GC_ROOT_OBJECT AS ID, SPLIT_STR(GEDCOM_1.GC_VALUE, '/', 1) as FIRST, SPLIT_STR(GEDCOM_1.GC_VALUE, '/', 2) as LAST, GEDCOM.GC_TAG AS TYPE, GEDCOM_2.GC_VALUE AS YEAR, GEDCOM_3.GC_VALUE AS SEX FROM GEDCOM
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
	INNER JOIN GEDCOM AS GEDCOM_2 ON GEDCOM.GC_VALUE = GEDCOM_2.GC_ROOT_OBJECT
	INNER JOIN GEDCOM AS GEDCOM_3 ON GEDCOM.GC_VALUE = GEDCOM_3.GC_ROOT_OBJECT
WHERE  ((GEDCOM.GC_ROOT_OBJECT = root) 
	AND ((GEDCOM.GC_TAG = 'CHIL') OR (GEDCOM.GC_TAG = 'WIFE') OR (GEDCOM.GC_TAG = 'HUSB'))
    AND (GEDCOM_1.GC_TAG = 'NAME') 
    AND (GEDCOM_2.GC_TAG = 'INDI') 
    AND (GEDCOM_3.GC_TAG = 'SEX'))
    ORDER BY YEAR;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getByPlace`(IN `place` CHAR(32))
BEGIN
SELECT GEDCOM.GC_ROOT_OBJECT, 
	CONCAT(SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 2), ', ', SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 1), ' (', TRIM(GEDCOM_1.GC_TAG), ')') AS Text 
    FROM GEDCOM
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_PARENT = GEDCOM_1.GC_NODE
    INNER JOIN GEDCOM as GEDCOM_2 ON GEDCOM_1.GC_PARENT = GEDCOM_2.GC_PARENT
    WHERE ((GEDCOM.GC_VALUE LIKE place)
		AND (GEDCOM.GC_TAG = 'PLAC')
        AND (GEDCOM_2.GC_TAG = 'NAME')
        AND NOT (GEDCOM.GC_ROOT_OBJECT LIKE '@F%'))
	ORDER BY Text;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getByTribe`(name CHAR(32))
BEGIN
SELECT GEDCOM.GC_ROOT_OBJECT, 
	CONCAT(SPLIT_STR(GEDCOM.GC_VALUE, '/', 2), ', ', SPLIT_STR(GEDCOM.GC_VALUE, '/', 1), ' (', GEDCOM_1.GC_VALUE, ')') AS Text 
	FROM GEDCOM
		INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM_1.GC_ROOT_OBJECT = GEDCOM.GC_ROOT_OBJECT
    WHERE GEDCOM.GC_TAG = 'NAME'
		AND GEDCOM.GC_VALUE LIKE CONCAT('%/', name, '/')
        AND GEDCOM_1.GC_TAG = 'INDI'
	ORDER BY Text;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getByYear`(IN `year` CHAR(4))
BEGIN
SELECT GEDCOM.GC_ROOT_OBJECT, 
	CONCAT(SPLIT_STR(GEDCOM_1.GC_VALUE, '/', 2), ', ', SPLIT_STR(GEDCOM_1.GC_VALUE, '/', 1)) AS TEXT 
    FROM GEDCOM
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_ROOT_OBJECT = GEDCOM_1.GC_ROOT_OBJECT
    WHERE ((GEDCOM.GC_VALUE = year)
		AND (GEDCOM.GC_TAG = 'INDI')
        AND (GEDCOM_1.GC_TAG = 'NAME'))
	ORDER BY TEXT;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getChildren`(IN `root` CHAR(8))
BEGIN
SELECT GEDCOM_2.GC_ROOT_OBJECT, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 1) as FIRST, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 2) as LAST, GEDCOM_3.GC_VALUE AS YEAR, GEDCOM_4.GC_VALUE AS SEX, GEDCOM_6.GC_VALUE AS BIRTH
FROM     GEDCOM INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
				INNER JOIN GEDCOM AS GEDCOM_2 ON GEDCOM_1.GC_VALUE = GEDCOM_2.GC_ROOT_OBJECT
                INNER JOIN GEDCOM AS GEDCOM_3 ON GEDCOM_1.GC_VALUE = GEDCOM_3.GC_ROOT_OBJECT
                INNER JOIN GEDCOM AS GEDCOM_4 ON GEDCOM_1.GC_VALUE = GEDCOM_4.GC_ROOT_OBJECT
                INNER JOIN GEDCOM AS GEDCOM_5 ON GEDCOM_1.GC_VALUE = GEDCOM_5.GC_ROOT_OBJECT
                INNER JOIN GEDCOM AS GEDCOM_6 ON GEDCOM_5.GC_NODE = GEDCOM_6.GC_PARENT
WHERE  ((GEDCOM.GC_TAG ='FAMS') 
	AND (GEDCOM_1.GC_TAG = 'CHIL') 
    AND (GEDCOM_2.GC_TAG = 'NAME') 
    AND (GEDCOM_3.GC_TAG = 'INDI') 
    AND (GEDCOM_4.GC_TAG = 'SEX')
    AND (GEDCOM_5.GC_TAG = 'BIRT')
    AND (GEDCOM_6.GC_TAG = 'DATE')
    AND (GEDCOM.GC_ROOT_OBJECT = root))
    ORDER BY YEAR;
END$$
DELIMITER ;


MITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getDocs`(IN `dRoot` CHAR(8))
BEGIN
SELECT GEDCOM.GC_NODE AS ROOT, GEDCOM_1.GC_VALUE AS TEXT FROM GEDCOM
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_NODE = GEDCOM_1.GC_PARENT
    WHERE ((GEDCOM.GC_TAG = 'OBJE')
		AND (GEDCOM_1.GC_TAG = 'TITL')
        AND (GEDCOM.GC_ROOT_OBJECT = dRoot))
        ORDER BY GEDCOM.GC_NODE;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getFamilyMembers`(IN `root` CHAR(8), IN `type` CHAR(4))
BEGIN
SELECT GEDCOM_2.GC_ROOT_OBJECT AS VALUE, GEDCOM.GC_VALUE AS EXTRA, GEDCOM_2.GC_VALUE AS TEXT, GEDCOM_1.GC_TAG FROM GEDCOM
INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
INNER JOIN GEDCOM AS GEDCOM_2 ON GEDCOM_1.GC_VALUE = GEDCOM_2.GC_ROOT_OBJECT
    WHERE ((GEDCOM.GC_TAG = type)
    AND (GEDCOM_2.GC_TAG = 'NAME')
    
    AND NOT (GEDCOM_2.GC_ROOT_OBJECT = root)
    AND (GEDCOM_1.GC_VALUE != root)
    AND (GEDCOM.GC_ROOT_OBJECT = root))
    ORDER BY GEDCOM_1.GC_TAG DESC;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getFChildren`(IN `root` CHAR(8))
BEGIN
SELECT GEDCOM.GC_VALUE FROM GEDCOM 
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
	WHERE GEDCOM.GC_ROOT_OBJECT = root
    AND GEDCOM.GC_TAG = 'CHIL'
    AND GEDCOM_1.GC_LEVEL = 0
    ORDER BY GEDCOM_1.GC_VALUE;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getGenderPattern`()
BEGIN
SELECT DISTINCT GC_VALUE AS person, GC_TAG as role FROM GEDCOM 
WHERE (GC_TAG = 'HUSB') OR (GC_TAG = 'WIFE')
ORDER BY GC_VALUE;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getHolocaust`()
BEGIN
SELECT DISTINCT GEDCOM.GC_ROOT_OBJECT, 
	CONCAT(SPLIT_STR(GEDCOM_1.GC_VALUE, '/', 2), ', ', SPLIT_STR(GEDCOM_1.GC_VALUE, '/', 1)) AS TEXT 
    FROM GEDCOM
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_ROOT_OBJECT = GEDCOM_1.GC_ROOT_OBJECT
    WHERE ((GEDCOM.GC_VALUE = 'HOLOCAUST')
		AND (GEDCOM.GC_TAG = 'CAUS')
        AND (GEDCOM_1.GC_TAG = 'NAME'))
	ORDER BY TEXT;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getIndName`(IN `iRoot` CHAR(8))
BEGIN
SELECT GC_ROOT_OBJECT AS ID, SUBSTRING_INDEX(GEDCOM.GC_VALUE, '/', 1) as FIRST, SUBSTRING_INDEX(SUBSTRING_INDEX(GEDCOM.GC_VALUE, '/', -2), '/', 1) as LAST FROM GEDCOM
	WHERE((GC_ROOT_OBJECT = iRoot)
    AND (GC_TAG = 'NAME'));
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getNames`(IN `name` CHAR(32))
BEGIN
SELECT GEDCOM.GC_ROOT_OBJECT, SUBSTRING_INDEX(GEDCOM.GC_VALUE, '/', 1) as FIRST, SUBSTRING_INDEX(SUBSTRING_INDEX(GEDCOM.GC_VALUE, '/', -2), '/', 1) as LAST, GEDCOM_1.GC_VALUE AS YEAR
	FROM GEDCOM
		INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_ROOT_OBJECT = GEDCOM_1.GC_ROOT_OBJECT
    WHERE ((GEDCOM.GC_TAG = 'NAME') 
		AND (GEDCOM.GC_VALUE LIKE name)
        AND (GEDCOM_1.GC_LEVEL = 0))
	ORDER BY FIRST;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getNodes`(IN `root` CHAR(8))
BEGIN
SELECT GEDCOM.GC_VALUE AS FAMID, GEDCOM_1.GC_VALUE AS YEAR FROM GEDCOM
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
	WHERE (GEDCOM.GC_ROOT_OBJECT = root)
    AND (GEDCOM.GC_TAG = 'FAMS')
    AND (GEDCOM_1.GC_LEVEL = 0)
    ORDER BY YEAR;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getOChildren`(IN `root` CHAR(8))
BEGIN
SELECT DISTINCT GEDCOM_2.GC_ROOT_OBJECT, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 1) as FIRST, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 2) as LAST, GEDCOM_3.GC_VALUE AS YEAR
FROM     GEDCOM JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
				JOIN GEDCOM AS GEDCOM_2 ON GEDCOM_1.GC_VALUE = GEDCOM_2.GC_ROOT_OBJECT
                JOIN GEDCOM AS GEDCOM_3 ON GEDCOM_1.GC_VALUE = GEDCOM_3.GC_ROOT_OBJECT
WHERE  ((GEDCOM.GC_TAG ='FAMS') 
	AND (GEDCOM_1.GC_TAG = 'CHIL') 
    AND (GEDCOM_2.GC_TAG = 'NAME') 
    AND (GEDCOM_3.GC_TAG = 'INDI') 
    AND (GEDCOM.GC_ROOT_OBJECT = root))
    ORDER BY YEAR;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getParentGender`(IN `root` CHAR(8))
BEGIN
SELECT GEDCOM_2.GC_VALUE AS VALUE, GEDCOM_1.GC_ROOT_OBJECT AS EXTRA, GEDCOM_2.GC_ROOT_OBJECT as TEXT FROM GEDCOM
	INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
    INNER JOIN GEDCOM AS GEDCOM_2 ON GEDCOM_1.GC_VALUE = GEDCOM_2.GC_ROOT_OBJECT
    WHERE ((GEDCOM.GC_ROOT_OBJECT = root)
    AND (GEDCOM.GC_TAG = 'FAMC')
    AND ((GEDCOM_1.GC_TAG = 'WIFE') OR (GEDCOM_1.GC_TAG = 'HUSB'))
    AND (GEDCOM_2.GC_TAG = 'SEX'));
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getParents`(IN `root` CHAR(8))
BEGIN
SELECT DISTINCT GEDCOM_2.GC_ROOT_OBJECT, GEDCOM_1.GC_TAG AS TYPE, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 1) AS FIRST, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 2) AS LAST
	FROM GEDCOM
		INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
		INNER JOIN GEDCOM AS GEDCOM_2 ON GEDCOM_1.GC_VALUE = GEDCOM_2.GC_ROOT_OBJECT
    WHERE ((GEDCOM.GC_ROOT_OBJECT = root) 
		AND (GEDCOM.GC_TAG = 'FAMC') 
		AND ((GEDCOM_1.GC_TAG = 'HUSB') OR (GEDCOM_1.GC_TAG = 'WIFE')) 
		AND (GEDCOM_2.GC_TAG = 'NAME'))
 	ORDER BY TYPE;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getRelation`(IN `root` CHAR(8), IN `fType` CHAR(4), IN `spouse` CHAR(4))
SELECT GEDCOM.GC_VALUE AS EXTRA, GEDCOM_2.GC_VALUE AS NAME FROM GEDCOM
INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
INNER JOIN GEDCOM AS GEDCOM_2 ON GEDCOM_1.GC_VALUE = GEDCOM_2.GC_ROOT_OBJECT 
    WHERE ((GEDCOM.GC_ROOT_OBJECT = root)
		AND (GEDCOM.GC_TAG = fType)
		AND (GEDCOM_1.GC_TAG = spouse)
        AND (GEDCOM_2.GC_ROOT_OBJECT != root)
        AND (GEDCOM_2.GC_TAG = 'NAME'))$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getSiblings`(IN `root` CHAR(8))
BEGIN
SELECT G2.GC_ROOT_OBJECT, SPLIT_STR(G2.GC_VALUE, '/', 1) AS FIRST, SPLIT_STR(G2.GC_VALUE, '/', 2) AS LAST, G4.GC_VALUE AS YEAR FROM GEDCOM AS G0
	LEFT JOIN GEDCOM AS G1 ON G1.GC_ROOT_OBJECT = G0.GC_VALUE
	LEFT JOIN GEDCOM AS G2 ON G2.GC_ROOT_OBJECT = G1.GC_VALUE
	LEFT JOIN GEDCOM AS G3 ON G3.GC_ROOT_OBJECT = G1.GC_VALUE
	LEFT JOIN GEDCOM AS G4 ON G4.GC_PARENT = G3.GC_NODE
	WHERE ((G0.GC_ROOT_OBJECT = root)
	AND (G1.GC_TAG = 'CHIL')
	AND (G2.GC_TAG = 'NAME')
	AND (G3.GC_TAG = 'BIRT')
	AND (G4.GC_TAG = 'DATE')
	AND (G2.GC_ROOT_OBJECT != G0.GC_ROOT_OBJECT)
	AND (G0.GC_TAG = 'FAMC'))
	ORDER BY YEAR;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getSimple`(IN `root` CHAR(8), IN `type` CHAR(4))
BEGIN
	SELECT GC_VALUE FROM GEDCOM WHERE GC_ROOT_OBJECT = root AND GC_TAG = type;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getSpouses`(IN `root` CHAR(8))
BEGIN
SELECT DISTINCT GEDCOM_2.GC_ROOT_OBJECT, GEDCOM_1.GC_TAG AS TYPE, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 1) as FIRST, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 2) as LAST, GEDCOM_3.GC_VALUE AS YEAR, GEDCOM_1.GC_ROOT_OBJECT AS EXTRA 
		FROM GEDCOM JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
		JOIN GEDCOM AS GEDCOM_2 ON GEDCOM_1.GC_VALUE = GEDCOM_2.GC_ROOT_OBJECT
        JOIN GEDCOM AS GEDCOM_3 ON GEDCOM_1.GC_ROOT_OBJECT = GEDCOM_3.GC_ROOT_OBJECT
    WHERE ((GEDCOM.GC_ROOT_OBJECT = root) 
		AND (GEDCOM.GC_TAG = 'FAMS')
        AND ((GEDCOM_1.GC_TAG = 'HUSB') OR (GEDCOM_1.GC_TAG = 'WIFE')) AND (GEDCOM_2.GC_TAG = 'NAME')
        AND (GEDCOM_3.GC_LEVEL = 0)
        AND (GEDCOM_2.GC_ROOT_OBJECT != GEDCOM.GC_ROOT_OBJECT))
	ORDER BY YEAR;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `getSpouses2`(IN `root` CHAR(8))
BEGIN
SELECT GEDCOM_2.GC_ROOT_OBJECT, GEDCOM_1.GC_TAG AS TYPE, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 1) as FIRST, SPLIT_STR(GEDCOM_2.GC_VALUE, '/', 2) as LAST, GEDCOM_3.GC_VALUE AS YEAR, GEDCOM_1.GC_ROOT_OBJECT AS EXTRA FROM GEDCOM
		INNER JOIN GEDCOM AS GEDCOM_1 ON GEDCOM.GC_VALUE = GEDCOM_1.GC_ROOT_OBJECT
		INNER JOIN GEDCOM AS GEDCOM_2 ON GEDCOM_1.GC_VALUE = GEDCOM_2.GC_ROOT_OBJECT
        INNER JOIN GEDCOM AS GEDCOM_3 ON GEDCOM_1.GC_ROOT_OBJECT = GEDCOM_3.GC_ROOT_OBJECT
        LEFT JOIN GEDCOM AS GEDCOM_4 ON GEDCOM_2.GC_PARENT = GEDCOM_4.GC_PARENT AND (GEDCOM_4.GC_TAG = 'BIRT')
    WHERE ((GEDCOM.GC_ROOT_OBJECT = root) 
		AND (GEDCOM.GC_TAG = 'FAMS')
        AND ((GEDCOM_1.GC_TAG = 'HUSB') OR (GEDCOM_1.GC_TAG = 'WIFE')) AND (GEDCOM_2.GC_TAG = 'NAME')
        AND (GEDCOM_3.GC_LEVEL = 0)
        AND (GEDCOM_2.GC_ROOT_OBJECT != GEDCOM.GC_ROOT_OBJECT));
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`Genealogist`@`%` PROCEDURE `makeFamilies`()
BEGIN
DROP TABLE IF EXISTS FAMILIES;
CREATE TABLE FAMILIES SELECT DISTINCT SUBSTRING_INDEX(SUBSTRING_INDEX(GEDCOM.GC_VALUE, '/', -2), '/', 1) AS LAST FROM
    GEDCOM
WHERE
    (GEDCOM.GC_TAG = 'NAME')
ORDER BY
	LAST;

END$$
DELIMITER ;
